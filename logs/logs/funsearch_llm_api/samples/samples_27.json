{"sample_order": 27, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v0`.\"\"\"\n    priorities = np.zeros(len(bins))\n    for i, bin in enumerate(bins):\n        if bin >= item:\n            priorities[i] = 1\n        else:\n            remaining_space = bin - item\n            ratio = remaining_space / bin\n            priority = 1 - ratio\n            priorities[i] = priority\n    return priorities\n\n", "score": -212.75}