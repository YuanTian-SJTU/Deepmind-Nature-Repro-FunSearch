{"sample_order": 59, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v1`.\"\"\"\n    priorities = np.zeros(len(bins))\n    if item > np.max(bins):\n        return priorities\n    for i in range(len(bins)):\n        if item == bins[i]:\n            priorities[i] = 1\n        elif item < bins[i]:\n            priorities[i] = 2**item - 2**bins[i]\n        else:\n            priorities[i] = -1 * (item - bins[i]) / item\n    return priorities\n\n", "score": -265.1}