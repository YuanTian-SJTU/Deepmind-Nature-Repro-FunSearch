{"sample_order": 123, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros(len(bins))\n    for i in range(len(bins)):\n        if bins[i] == 0:\n            priorities[i] = 0\n        elif bins[i] >= item:\n            priorities[i] = 1 + (item / bins[i])\n        else:\n            priority = 1\n            for j in range(len(bins)):\n                if bins[j] >= item:\n                    priority += 1 / (1 + np.abs(item - bins[j]))\n            priorities[i] = priority\n    return priorities\n\n", "score": -212.0}