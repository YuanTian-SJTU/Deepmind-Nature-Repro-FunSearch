{"sample_order": 35, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v0`\"\"\"\n    priorities = []\n    for i in range(len(bins)):\n        if item < bins[i] / 2:\n            priority = item / bins[i]\n            priorities.append(priority)\n        elif item > bins[i]:\n            priority = item / bins[i]\n            priorities.append(priority)\n        else:\n            priority = (bins[i] - item) / bins[i]\n            priorities.append(priority)\n    return priorities\n\n", "score": -282.7}