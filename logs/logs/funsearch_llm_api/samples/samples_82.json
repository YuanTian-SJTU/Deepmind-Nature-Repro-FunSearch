{"sample_order": 82, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = []\n\n    for i in range(len(bins)):\n        priority = 0\n        \n        if bins[i] == 0:\n            priorities.append(0)\n        else:\n            bin_utilization = 1 - (bins[i] - item) / bins[i]\n            \n            if bin_utilization < 0.2:\n                priority = 0.2\n            elif bin_utilization < 0.5:\n                priority = bin_utilization * 2\n            elif bin_utilization <= 1:\n                priority = bin_utilization\n            else:\n                priority = 1\n\n            priorities.append(priority)\n    \n    return np.array(priorities)\n\n", "score": -210.35}