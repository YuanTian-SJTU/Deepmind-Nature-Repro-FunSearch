{"sample_order": 84, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = []\n    for i in range(len(bins)):\n        if bins[i] == 0:\n            priorities.append(0)\n        elif item > bins[i]:\n            priorities.append(1)\n        else:\n            priority = item / bins[i]\n            if priority < 0.2:\n                priorities.append(0.2)\n            elif priority < 0.5:\n                priority *= 2\n                if priority < 0.3:\n                    priorities.append(0.3)\n                elif priority < 0.4:\n                    priorities.append(0.4)\n                else:\n                    priorities.append(priority)\n            else:\n                priorities.append(priority)\n    return np.array(priorities)\n\n", "score": -210.2}