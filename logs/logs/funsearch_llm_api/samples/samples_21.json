{"sample_order": 21, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priority_scores = []\n    for bin_capacity in bins:\n        priority_score = 0\n        if item > bin_capacity:\n            priority_score = -1\n        elif item == bin_capacity:\n            priority_score = 1\n        else:\n            ratio = item / bin_capacity\n            if ratio < 0.5:\n                priority_score = 2 * ratio\n            elif ratio < 1:\n                priority_score = 1 / ratio\n            else:\n                priority_score = 0.5 * ratio\n\n        priority_scores.append(priority_score)\n\n    return np.array(priority_scores)\n\n", "score": -224.0}