{"sample_order": 119, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v1`.\"\"\"\n    priorities = np.zeros(bins.shape)\n    for i, bin_capacity in enumerate(bins):\n        if bin_capacity < item:\n            priorities[i] = 0\n        elif bin_capacity - item <= 0.1 * bin_capacity:\n            priorities[i] = 0.5\n        else:\n            priorities[i] = 1\n    return priorities\n\n", "score": -220.5}