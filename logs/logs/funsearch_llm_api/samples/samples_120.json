{"sample_order": 120, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v1`.\"\"\"\n    priorities = np.zeros(bins.shape)\n    \n    for i in range(len(bins)):\n        ratio = item / bins[i]\n        if ratio > 1:\n            priorities[i] = -np.log(ratio)\n        elif ratio == 1:\n            priorities[i] = 1\n        elif ratio > 0.5:\n            priorities[i] = np.log(ratio)\n        else:\n            priorities[i] = 2 * np.log(ratio)\n    \n    return priorities\n\n", "score": -212.0}