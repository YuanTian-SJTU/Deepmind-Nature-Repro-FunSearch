{"sample_order": 4, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Even more improved version of `priority_v1`.\"\"\"\n    num_bins = len(bins)\n    priorities = np.zeros(num_bins)\n    for i in range(num_bins):\n        if bins[i] >= item:\n            priorities[i] = 1\n        else:\n            priorities[i] = (item - bins[i]) / item\n    return priorities\n\n", "score": -212.75}