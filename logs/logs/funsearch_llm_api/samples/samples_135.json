{"sample_order": 135, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros_like(bins)\n    for i in range(len(bins)):\n        if bins[i] == 0:\n            priorities[i] = 0\n        elif item > bins[i]:\n            priorities[i] = 1\n        else:\n            priority_sum = 0\n            for j in range(i + 1):\n                priority_sum += item / bins[j]\n            priorities[i] = priority_sum\n    return priorities\n\n", "score": -212.15}