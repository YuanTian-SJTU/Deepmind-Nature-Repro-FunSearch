{"sample_order": 29, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v0`.\"\"\"\n\n    ratios = item / bins\n    log_ratios = np.log(ratios)\n    \n    # Some additional complex logic\n    priorities = []\n    for ratio in log_ratios:\n        if ratio > 0.5:\n            priorities.append(2)\n        elif ratio > 0.25:\n            priorities.append(1.5)\n        else:\n            priorities.append(1)\n    \n    return np.array(priorities)\n\n", "score": -212.75}