{"sample_order": 121, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v1`.\"\"\"\n    priorities = np.zeros(bins.shape)\n    for i, bin in enumerate(bins):\n        if bin >= item:\n            priorities[i] = bin - item\n        else:\n            priorities[i] = item - bin\n        \n    return priorities\n\n", "score": -500.0}