{"sample_order": 41, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = []\n    for bin_capacity in bins:\n        if bin_capacity >= item:\n            priority = 1\n        elif bin_capacity > 0:\n            remaining_capacity = bin_capacity - item\n            usage_ratio = remaining_capacity / bin_capacity\n            if usage_ratio > 0.8:\n                priority = 0.9\n            elif usage_ratio > 0.6:\n                priority = 0.7\n            elif usage_ratio > 0.4:\n                priority = 0.5\n            elif usage_ratio > 0.2:\n                priority = 0.3\n            else:\n                priority = 0.1\n        else:\n            priority = 0\n        priorities.append(priority)\n    return np.array(priorities)\n\n", "score": -212.75}