{"sample_order": 67, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v0`.\"\"\"\n\n    priorities = np.zeros_like(bins)\n\n    for i in range(len(bins)):\n        if item <= bins[i]:\n            ratios = item / bins[i]\n            log_ratios = np.log(ratios)\n            priorities[i] = -log_ratios\n        else:\n            priorities[i] = -np.inf\n    \n    return priorities\n\n", "score": -236.2}